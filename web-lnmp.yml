- name: Configure webserver with nginx and tls
  hosts: centos5
  become: yes
  become_method: sudo
  become_user: root
  tasks:
 
    

    - name: create project group
      group:
        name: "{{ group }}"
        state: present

    - name: create preject user
      user: 
        name: "{{ user }}"
        shell: /bin/bash
        group: "{{ group }}"

    - name: refresh nginx rpm
      yum:
        name: "http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm"
        state: present

    - name: install nginx 
      yum:
        name: nginx
        state: latest

    - name: refresh php rpm
      yum:
        name: "https://mirror.webtatic.com/yum/el6/latest.rpm"
        state: present

    - name: install some extensions php-fpm
      yum:
        name: "{{ item }}"
        state: latest
      with_items:
        - pcre
        - pcre-devel
        - zlib
        - zlib-devel
        - openssl
        - nginx
        - php71w-fpm
        - php71w-mysqlnd
        - php71w-pdo
        - php71w-pecl-redis
        - libselinux-python
        - zip
        - unzip

    - name: install git 
      yum:
        name: git
        state: present
       
    - name: Download Composer
      script: scripts/install_composer.sh

    - name: Move Composer globally
      command: mv composer.phar /usr/local/bin/composer

    - name: set permission for composer
      file:
        path: /usr/local/bin/composer
        mode: "a+x"

    - name: make dir for php-sock and change mod to 777
      file:
        path: "{{ php_fpm_sock_dir }}"
        state: directory
        mode: 0777
        

    - name: make dir for nginx error
      file:
        path: "{{ nginx_error_log_dir }}"
        state: directory
        mode: 0755

   # 开始不要建立sock的file 让fpm创建这个file 之后给这个file赋值 777就行了
   # - name: make php sock file
   #   file:
   #     path: "{{ php_fpm_sock_file }}"
   #     state: touch
   #     mode: 0777
   #   ignore_errors: yes  

    - name: mkdir symfony
      file: 
        path: "{{ nginx_symfony_log_dir }}"
        state: directory
        mode: 0755

    - name: mkdir nginx pid dir
      file: 
        path: "{{ nginx_pid_dir }}" 
        state: directory
        mode: 0777
   
    - name: make nginx pid file
      file:
        path: "{{ nginx_pid_dir }}/nginx.pid"
        state: touch
        mode: 0777

    - name: mkdir for ssh
      file:
        path: "/home/{{ user }}/.ssh"
        state: directory
       
    - name: copy dirs
      copy:
        src: files/nginx/conf
        dest: "{{ nginx_conf_copy_dir}}"
  
    - name: copy ssh pub key
      copy:
        src: "{{ ssh_key_dir }}/id_rsa.pub"
        dest: /home/{{ user }}/.ssh/id_rsa.pub
        owner: vagrant
        mode: 0644

    - name: copy shh private key
      copy:
        src: "{{ ssh_key_dir }}/id_rsa"
        dest: /home/{{ user }}/.ssh/id_rsa
        owner: vagrant
        mode: 0600

    - name: generate nginx.conf
      template: 
        src: templates/nginx/nginx_conf.j2
        dest: "{{ nginx_conf_file }}"
 
    - name: generate php-fpm.conf 
      template: 
        src: templates/www-php-fpm_conf.j2 
        dest: /etc/php-fpm.d/www.conf 

    - name: pull project from git
      git: 
        repo: "git@git.coding.net:canvas0607/sf_login.git"
        dest: "{{ sf_project_dir }}"
        remote: master
        accept_hostkey: yes
      become: yes
      become_user: "{{ user }}"
      ignore_errors: yes
      
#    - name: install compents 
#      composer:
#        command: require
#        arguments: "{{ sf_project_dir }}/composer.json"
#        working_dir: "{{ sf_project_dir }}"
#      become: yes
#      become_user: "{{ user }}"

    - name: install symfony bundles
      command: composer install
      args:
         chdir: "{{ sf_project_dir }}"
      become: yes
      become_user: "{{ user }}"
   
   # - name: change_mod_php-fpm.sock for php-fpm restart
   #   file:
   #     path: "{{ php_fpm_sock_file }}"
   #     mode: 0777
   #   ignore_errors: yes
   

    - name: start fpm
      command: php-fpm
      args:
         chdir: "{{ sf_project_dir }}"
      notify: change_mod_php-fpm.sock

   
  #  - name: restart php-fpm
  #    service:
  #      name: php-fpm
  #      state: restarted


    - name: start nginx
      command: "nginx -c {{ nginx_conf_file }}"
      ignore_errors: yes

    - name: restart nginx
      command: "nginx -c {{ nginx_conf_file }} -s reload"
      notify: change_mod_php-fpm.sock

    - name: clear php
      command: php bin/console cache:clear --env=prod --no-debug
      args:
         chdir: "{{ sf_project_dir }}"

  handlers:
    - name: change_mod_php-fpm.sock 
      file:
        path: "{{ php_fpm_sock_file }}"
        mode: 0777

    - name: restart_php-fpm
      service:
        name: php-fpm
        state: restarted

  vars:
    user: vagrant
    group: vagrant
    home_dir: "/home/{{ user }}"
    php_fpm_sock_dir: "{{ home_dir }}/var/run/php"
    php_fpm_sock_file: "{{ php_fpm_sock_dir }}/php-fpm.sock"
    nginx_error_log_dir: "{{ home_dir }}/var/log/nginx"
    nginx_symfony_log_dir: "{{ home_dir }}/var/log/sflog"
    nginx_pid_dir: "{{ home_dir }}/var/run/nginx"
    sf_project_dir: "{{ home_dir }}/www/sf_log"
    ssh_key_dir: "files/ssh_keys"
    nginx_conf_copy_dir: /etc/nginx
    nginx_conf_dir: "{{ nginx_conf_copy_dir }}/conf"
    nginx_conf_file: "{{ nginx_conf_dir}}/nginx.conf"
    #fpm_conf_dir: "{{ home_dir }}/etc/nginx"
